<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用next主题配置博客基本信息]]></title>
    <url>%2F2018%2F03%2F02%2Fblog2%2F</url>
    <content type="text"><![CDATA[一、前言 在上篇文章中提到了如何免费通过github和hexo创建一个自己的博客，在此将通过next为例，演示一遍配置的过程（喜欢其他主题的可以在此绕过了） 常用命令及文件地址：部署到本地预览查看三部曲： hexo clean （清除缓存） hexo g (生成静态网页) hexo s (本地启动预览查看) 部署到git服务器上： hexo deploy 博客配置文件地址： ~/blog/_config.yml 主题配置文件地址 ~/blog/themes/next/_config.yml 记住这些名字，后面不再重复解释 二、next主题的安装和基本配置（一）安装首先从github上clone到本地，在终端cd 到blog文件夹（即你通过Hexo init生成的根目录），然后在终端输入命令： git clone https://github.com/iissnan/hexo-theme-next themes/next 进入blog的全局配置文件：_config.yml （在blog文件夹下 /blog/_config.yml） 找到theme字段：设置为 theme: next 此时可以查看下主题是否配置成功，执行上面提到的三部曲（ 终端cd到blog文件夹 执行 hexo clean , hexo g , hexo s ）然后访问http://localhost:4000/,在本地查看效果，进行预览 （二） 基本信息的配置更多的博客和主题的配置可参考 hexo官方文档 和 next主题文档，如不想那么麻烦，可以继续往下看，下面就是我使用的一些常用的功能，足够自己使用了 1、网站标题、作者、语言在博客配置文件_config.yml中进行如下配置 # Site title: 拾忆的技术博客 subtitle: 小白的技术成长之路 description: 小白的技术成长之路 author: 拾忆 language: zh-Hans timezone: Asia/Shanghai （如不填，则表示默认电脑的时区） 这里设置标题作者名字等信息，其中language一项最好配置成zh-Hans（简体中文），（查看next主题支持哪些语言 可查看~/blog/themes/next/languages文件夹） 2、next主题的风格设置在主题配置文件_config.yml中进行如下配置 next默认有四种风格，可根据自己喜欢的样式去设置查看 # Schemes #scheme: Muse scheme: Mist #scheme: Pisces #scheme: Gemini 我这里使用的是Mist样式，其中#表示注释，使用哪种去掉前面的#即可，后不再说明 3、设置菜单选项打开主题配置文件： 先奉上我的配置方便大家去参考： menu: home: / || home categories: /categories || th about: /about || user archives: /archives || archive tags: /tags || tags #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbeat # Enable/Disable menu icons. menu_icons: enable: true # Icon Mapping. home: home about: user categories: th tags: tags archives: archive 其中menu表示配置菜单内容，menu_icons表示菜单图片，如需使用图片则在menu中设定值的后面加上 || 图片名 （1）常用的默认菜单项，其中home和archives两页是系统默认的就有的，其他的需要自己创建，后面会讲到 键值 设定值 显示文本（简体中文） home home: / 主页 archives archives: / 归档页 categories categories: /categories 分类页 tags tags: /tags 标签页 about about: /about 关于页面 （2）设置菜单项的显示文本。在第一步中设置的菜单的名称并不直接用于界面上的展示。Hexo 在生成的时候将使用 这个名称查找对应的语言翻译，并提取显示文本。这些翻译文本放置在 NexT 主题目录下的 languages/{language}.yml （{language} 为你所使用的语言）。 以简体中文为例，若你需要添加一个菜单项，比如 something。那么就需要修改简体中文对应的翻译文件 languages/zh-Hans.yml，在 menu 字段下添加一项： menu: home: 首页 archives: 归档 categories: 分类 tags: 标签 about: 关于 （3）设定菜单项的图标，对应的字段是 menu_icons。 此设定格式是 item name: icon name，其中 item name 与上一步所配置的菜单名字对应，icon name 是 Font Awesome 图标的 名字,去掉前缀icon-(或使用图标库中的图片名称)。而 enable 可用于控制是否显示图标，你可以设置成 false 来去掉图标。next主题默认集成了识别Font Awesome图片的方式，只需要在里面找到想要图标的名称，就可以拿过来使用 # Enable/Disable menu icons. menu_icons: enable: true # Icon Mapping. home: home about: user categories: th tags: tags archives: archive 请注意键值（如 home）的大小写要严格匹配 4、创建上述菜单选项中对应的页面（1）分类页面 终端中cd 进入blog文件夹，执行 hexo new page &quot;categories&quot; 然后在~/blog/source 文件夹中即可看到categories文件夹，打开里面的index.md文件，设置如下（注意：后面要加空格）： --- title: 分类 （title可以自定义） type: categories （记住你写的type类型，后面分类文章需要使用） --- 这时候上一步中菜单项的配置才会生效 menu: home: / archives: /archives categories: /categories 这时候如运行本地查看会发现打开后没有任何东西，下面会告诉大家使用方法 （2）标签页面 同分类界面相同，终端中cd 进入blog文件夹，执行 hexo new page &quot;tags&quot; 然后在~/blog/source 文件夹中即可看到tags文件夹，打开里面的index.md文件，设置如下（注意：后面要加空格）： --- title: 标签 （title可以自定义） type: tags （记住你写的type类型，后面分类文章需要使用） --- 运行打开后同样什么都不会有 （3）关于页面 同理，打开index.md文件后，只需要配置标题即可 --- title: 自我介绍 date: 2018-02-28 17:11:54 --- 然后下面填写正文即可（这是我使用的方式，但是“关于”界面也可以使用其他方式配置，如配置个链接等，这里大家自行百度即可） 5、给文章添加分类和标签首先创建一个文章，上篇文章末尾有讲到，终端cd 进入blog文件夹，执行 hexo new &quot;文章名字&quot;，打开文章（在~/blog/source/_posts文件夹下）,然后进行如下配置： --- title: 标题 date: 2018-03-02 09:36:14 tags: [blog] （注意：使用[]，将需要添加的标签写进去，多个标签用,分隔，categories同理） categories: [blog] --- 保存，此时再去运行查看，点击分类和标签页面就会看到自己的文章了，不再是空的了 但是经过上述操作，发现每创建一篇文章都要在上面去加标签等字段，如果后期功能多的话，可能会要加很多字段，比较麻烦，这里有个比较相对容易的方式不用每次都去添加那些字段首先打开文件 ~/blog/scaffolds/post.md ,进行如下配置： --- title: {{ title }} date: {{ date }} tags: {{ tags }} categories: --- 你会发现，之后再创建文章时，文章上方会自动添加这些字段 6.修改作者头像并旋转打开主题配置文件，修改字段 avatar， 值设置成头像的链接地址 将头像放置主题目录下的 source/uploads/ （新建 uploads 目录若不存在）配置为： avatar: /uploads/avatar.png 或者 放置在 source/images/ 目录下配置为： avatar: /images/avatar.png 或直接放上链接，如：avatar: http://example.com/avatar.png 此时头像设置完成，如需实现旋转效果则按如下过程： 打开~\blog\themes\next\source\css_common\components\sidebar\sidebar-author.styl，在里面添加如下代码： .site-author-image { display: block; margin: 0 auto; padding: $site-author-image-padding; max-width: $site-author-image-width; height: $site-author-image-height; border: $site-author-image-border-width solid $site-author-image-border-color; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf; /* 设置循环动画 [animation: (play)动画名称 (2s)动画播放时长单位秒或微秒 (ase-out)动画播放的速度曲线为以低速结束 (1s)等待1秒然后开始动画 (1)动画播放次数(infinite为循环播放) ]*/ /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.0s ease-out; -moz-transition: -moz-transform 1.0s ease-out; transition: transform 1.0s ease-out; } img:hover { /* 鼠标经过停止头像旋转 -webkit-animation-play-state:paused; animation-play-state:paused;*/ /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg); } /* Z 轴旋转动画 */ @-webkit-keyframes play { 0% { -webkit-transform: rotateZ(0deg); } 100% { -webkit-transform: rotateZ(-360deg); } } @-moz-keyframes play { 0% { -moz-transform: rotateZ(0deg); } 100% { -moz-transform: rotateZ(-360deg); } } @keyframes play { 0% { transform: rotateZ(0deg); } 100% { transform: rotateZ(-360deg); } } 7.头像下方添加自己的github等信息打开主题配置文件，找到social字段，配置如下，大家可根据自己情况去配置，图片的使用方法同菜单栏一样 social: GitHub: https://github.com/username || github #E-Mail: #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skype social_icons: enable: true #icons_only: false #transition: false GitHub: github 8.给站点添加友情链接功能打开主题配置文件，进行如下配置： links_title: 友情链接 links: #百度: http://www.baidu.com/ #新浪: http://example.com/ 三、next主题的高级配置和一些炫酷的效果（一） 增加评论系统百度了一下最新的消息，当前版本的next主题中已经内置支持了各种各样的评论系统，但由于政策的原因（需要实名评论），导致大多数的评论插件都已经失效了，而国外的一些加载比较慢。 这里附上gitment的评论集成方式集成流程 gitment（依托于github issue，能够自己管理，而且被墙的概率小），不过兼容性不太好（需要chrome内核才行），本人使用的gitment，有一个小问题，就是每次发布文章时需要登录下自己的github账号去初始化一下评论，评论功能才能使用，否则会提示“未开放评论” Hypercomments 是国外的一个第三方评论平台 多说 在2017年06月01日就关闭评论服务了 网易云跟贴 2017年08月01日也停止服务了 来必力 (韩国人弄的)总是乱码 DISQUS 外国的，加载慢 （二） 隐藏网页底部powered By Hexo / 强力驱动打开主题配置文件，找到如下图位置，将powered设置为 false，theme下的enable 设置为 false （三） 设置首页文章列表不显示全文(只显示预览) 进入hexo博客项目的themes/next目录 打开_config.yml文件 搜索”auto_excerpt”,找到如下部分： # Automatically Excerpt. Not recommand. # Please use &lt;!-- more --&gt; in the post to control excerpt accurately. auto_excerpt: enable: false length: 150 把enable改为对应的false改为true，length设置下，然后hexo d -g，再进主页，问题就解决了！ （四） 增加本地搜索功能添加百度/谷歌/本地 自定义站点内容搜索 安装 hexo-generator-searchdb，在站点的根目录下执行以下命令： npm install hexo-generator-searchdb --save 编辑博客配置文件，新增以下内容到任意位置： search: path: search.xml field: post format: html limit: 10000 编辑主题配置文件，启用本地搜索功能： # Local search local_search: enable: true （五）其他炫酷效果可参考 hexo的next主题个性化教程:打造炫酷网站]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用Hexo&GitHub免费快速搭建博客教程]]></title>
    <url>%2F2018%2F03%2F01%2Fblog1%2F</url>
    <content type="text"><![CDATA[经过两天的折腾，终于搞定了属于自己的第一个博客的搭建，在此期间踩了许多坑，现总结一下帮助各位能够更方便去搭建自己的博客。先贴上成果 拾忆的博客 百度参考了各路大神的博客文章最后进行的总结，望各路大神不要介意哦~ 因为本人长期使用mac电脑，故本篇文章只在mac系统的基础上去实现功能，使用Windows系统需要自行参考，其原理是一样的。 这是本人写的第一篇文章，可能会看到和其他的许多文章有相似之处，请大家自动忽略(￣▽￣)~* ，全文纯手打，旨在帮助大家更方便的实现搭建过程，大家不喜勿喷哦~ 一、引子1.搭建博客的原因 曾经用过印象笔记，有道笔记等工具来记录文章，但用起来总是感觉有或多或少的问题，不如用博客看的更直观 可以随心发表，改造外观，功能 拥有一个自己的博客网站，感觉更爽 希望更多的人可以看到自己写的文章 2.整个过程使用的时间 最开始百度参考了各路大神的文章，每篇文章都会有或多或少的缺陷，自己又踩了许多坑才完成 用了大概两天的时间，完成了博客的搭建和主题的修改 3.环境配置 mac系统，sublime编辑器 （暂时使用到的） github账号，hexo框架配置，next主题 （下面会提供配置方式） 4.搭建方式 使用hexo框架进行网站的构建，然后部署到免费的github上 二、GitHub配置 登陆 https://github.com/ ，没有账号的就去注册一个，记住自己的用户名 主页中点击右上角自己的图标，点击your profile 点击repositories，新建一个 Repository name （填自己的名字） http://yourname.github.io(yourname与你的注册用户名一致,这个就是你博客的域名了),下图中报错是因为我已经用过了这个名字，大家填写自己的名字不会遇到这个问题，然后点击create repository进行下一步 点击自己的这个repository，然后找到settings 下拉找到GitHub Pages, 其中上面红框中的即为你的博客地址，下面红色框中可以进去选择自己的主题样式, 此时github中的基本配置已经完成 如第一次进入，可能会不显示博客地址，如下图，则可以先选择github自带的主题样式，Choose a theme 按钮，再回来后就能够看到了(注意：在save按钮左边那项要显示为master branch才表示正确) 三、环境配置 安装 Node.js 安装完成后终端输入 node -v npm -v 查看版本号，如存在则表明配置成功 mac系统自带Git环境，Windows用户需要自行下载Git 安装完成后，通过git命令查看自己的用户名和邮箱是否和自己github中的一致，如不一致请自行更改，如查询到多个用户名须删除没用的用户名，如查询后没有任何反应则表明还没有配置用户名，用下面的修改或者添加用户名命令即可，如提示其他之类的可先执行命令 git config，然后再执行以下命令即可成功,附查看和更改命令（其他命令可自行百度查找）： 查看用户名： git config --global user.name 查看邮箱： git config --global user.email 删除用户名 git config --global --unset user.name 要删的用户名 增加用户名 git config —global —add user.name 新加的用户名 修改用户名 git config --global user.name 用户名 修改邮箱 git config --global user.email 邮箱 终端中输入 npm install -g hexo-cli(如提示无权限即下图红色框中permission denied，则输入sudo npm install -g hexo-cli,后输入电脑密码enter即可) 这个过程会比较久，如果出现WARN错误可以忽略。我记得当时，每次都会出现说有一个依赖包已经不更新，这个不影响。执行完成后，使用 hexo -v 查看是否安装成功，如下图所示，即表明已经成功安装上 四、网站代码以及设置 在桌面上创建一个文件夹，名字自定义如：hexo,终端cd 进入hexo文件夹 输入hexo init blog (如出现warn错误可忽略，不影响) _config.yml, 网站的配置信息，可以在此配置中配置大部分的参数 source，资源文件夹是存放用户资源的地方。除 posts 文件夹之外，开头命名为 (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去 themes，主题 文件夹。Hexo 会根据主题来生成静态页面。 等待提示Start blogging with Hexo，就是安装成功了 文件夹中自带一篇文章“Hello World” 命令行cd进入blog目录下 输入hexo g，生存静态文件 输入hexo s，启动服务器。默认情况下，访问网址为： http://localhost:4000/ 此时服务开启，如需关闭Ctrl+ C 注：hexo s 命令开启的是本地服务，开启后，则可以使用上述地址访问，如关闭，则上述地址访问不到，本功能旨在用来检查修改的配置是否成功，如打开查看后发现没有问题则可以部署到服务器上，之后再用你的博客地址访问即可看到最新的设置效果。 如上传服务器之后立即查看博客可能没有立即变化，可尝试多刷新几次或重新打开浏览器即可 新打开一个终端，输入：ssh-keygen -t rsa -C “Github的注册邮箱地址” 一路enter过来，中间有的问题是选y/n的，选y即可，最后得到信息中找到这句话： Your public key has been saved in /Users/zjjk/.ssh/id_rsa.pub. 找到该文件(上句中in 后面即为该文件的地址)，打开（使用sublime text或其他编辑器）,Ctrl + a复制里面的所有内容，然后进入Sign in to GitHub：github.com/settings/ssh 一步步操作：New SSH key ——Title：blog —— Key：输入刚才复制的—— Add SSH key 注：此过程是生成ssh key，如后续再次执行此命令时，则需要把新生成的SSH key再配置到github中，因为新生成的SSH key会覆盖之前的，如不去github中替换会导致后续上传git服务器过程中失败 五、博客网站配置信息 进入blog文件夹，用sublime打开_config.yml文件，此文件为博客的配置信息，在此修改参数。（特别注意：每个参数的后面都要加个空格） 按照自己的信息进行基础设置 title: 拾忆的博客 subtitle: 小白的技术成长之路 description: 小白的技术成长之路 author: 拾忆 language: zh-CN timezone: Asia/Shanghai 在_config.yml文件中找到 deploy配置处（一般在最下面，默认的显示可能不全，需按照下方示例自己添加）, username替换成你自己的username, repository的地址为你在github中创建的那个项目的地址，可去github中复制 deploy: type: git repository: git@github.com:username/username.github.io.git branch: master 保存完毕。 各类主题的配置信息，要在主题文件夹内的_config.yml上进行配置！后续会以next主题为例进行示范，此处可忽略。 六、发表文章 终端 cd 进入blog文件夹下，输入hexo new &quot;Hello blog&quot;(Hello blog为你的文章名，可自定义) 打开返回的文件地址，打开文件（也可在blog文件夹下 source/_posts/Hello blog.md 中找到你刚才创建的文件） 文章内容采用Markdown语法进行编辑，需要用相关软件才能打开这个文件，本人使用的软件为MacDown mac版, 大家可根据自己习惯下载喜欢的工具(附：Markdown语法使用说明) 打开文件编辑 --- title: Hello blog date: --- 只输入title字段即可，后续其他字段可根据主题再添加（注意：title后面需加空格） 打开终端执行以下步骤: cd 进入blog 文件夹 $ hexo clean INFO Deleted database. INFO Deleted public folder. $ hexo generate INFO Start processing INFO Files loaded in 1.48 s ... INFO 29 files generated in 4.27 s $ hexo server INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 此处三步是进行本地配置完成后，在本地打开查看刚刚修改的配置是否修改成功，三处命令也可这样写 hexo clean hexo g hexo s 打开 http://localhost:4000/后检查，如没有任何问题可以部署到服务器上 $ hexo deploy INFO Deploying: git 此时可能会出现 error deployer not found:git 的错误，输入以下代码 npm install hexo-deployer-git --save(如提示无权限错误则输入sudo npm install hexo-deployer-git –-save，后输入电脑密码enter即可) 再次执行 hexo deploy 其中，可能会出现github登录界面，正常填写就行(这里我一直登陆着github，暂时没有遇到) 完成，终端可Ctrl+C关闭本地服务，然后打开 username.github.io 即可访问自己的博客（username为自己的github的用户名） 七、主题设置主题设置中，最好玩的就是尝试各式各样的主题啦！因本人喜欢next主题的风格，所以会在下篇文章中以next主题为例，走一遍发布文章和配置博客各种信息的流程，下面是其他的一些主题，大家可根据自己喜欢的样式去选择主题下载配置，一般的主题配置都会在其相应的github中说明 官方hexo主题大全，里面有许多主题都能尝试一下。 在这里推荐几个主题： next官网,Git(我用的就是这个啦，十分推荐！） Material官网，Git 主题配置，首先要下载主题，到相应的Git链接 下载完以后将文件解压缩后放到blog中的themes文件夹中 修改主题文件夹名称，将其改为 next(名称为你的主题的名称，可自定义，无硬性要求，下以next为例) 。 然后打开配置文件（/blog/_config.yml），找到 theme 字段，并将其值更改为 next(你刚才自定义的名称, 注意theme后加空格)，保存关闭 接下来，打开主题相应的博客中的文档说明，对比“主题”中的_config.yml（ /blog/themes/next/_config.yml ），针对自己需要的功能进行相关设置 有关设置中的图片，统一放到主题文件夹(/next/)内\source\img。在设置中，用”/img/xigua.png”类似格式进行图片设置。 设置时切记 : 后面要加一个空格。这个坑有点恼人~ 最后再重新进行一次，hexo clean,hexo g,hexo s,hexo deploy 整个博客就完成主题修改啦 八、总结 用了两天的时间，完成的博客的搭建，又花了一天时间来编写此篇文章，全文纯手打，写到这里真的好累啊~ 看着别人的文章一路搭建下来中间还是会遇到很多问题，于是各种百度解决，故在此奉上此文，我遇到的坑这里都明确的解决了，大家也一样，可能会遇到各种不同的问题，百度去一个一个的解决就好了（万能的百度啊~~~） 编写文章用了一遍Markdown的语法，感觉还可以 拾忆的博客 后续会陆续编写更多的文章，欢迎大家订阅哦~]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
